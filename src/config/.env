
NODE_ENV=development
PORT=3000 
HOST=localhost

# --- Configuración de la Base de Datos PostgreSQL ---
DB_USER=postgres
DB_PASSWORD=password
DB_HOST=localhost # O la IP/hostname de tu servidor de base de datos
DB_NAME=junta_de_vecinos # Nombre de tu base de datos
DB_PORT=5432 # Puerto por defecto de PostgreSQL

# --- Configuración de JWT (JSON Web Tokens) ---
# Puedes generar estos secretos con un generador de strings aleatorios (ej. openssl rand -base64 32)
ACCESS_JWT_SECRET=tu_super_secreto_aleatorio_para_access_tokens_de_al_menos_32_caracteres
REFRESH_JWT_SECRET=otro_super_secreto_aleatorio_diferente_para_refresh_tokens
ACCESS_JWT_EXPIRES_IN=15m # Tiempo de expiración del token de acceso (ej: 15 minutos, 1 hora, 1 día)
REFRESH_JWT_EXPIRES_IN=7d # Tiempo de expiración del token de refresco (ej: 7 días, 30 días)

# --- Configuración de Email (Nodemailer) ---
# Usar un servicio de email transaccional para producción (SendGrid, Mailgun, AWS SES)
# Para desarrollo, puedes usar un servicio SMTP de prueba como Ethereal, Mailtrap, o tu cuenta de Gmail (con precauciones)
EMAIL_HOST=smtp.ethereal.email # O smtp.gmail.com, o el host de tu proveedor
EMAIL_PORT=587 # O 465 para SSL
EMAIL_USER=tu_email_de_envio@example.com
EMAIL_PASS=tu_contraseña_de_aplicacion_o_email
EMAIL_FROM="Junta de Vecinos App <no-reply@example.com>" # El remitente que verán los usuarios

# --- Configuración de CORS (Cross-Origin Resource Sharing) ---
# Orígenes permitidos. Para múltiples, sepáralos por coma o usa '*' para permitir todos (no recomendado para producción).
CORS_ORIGIN=http://localhost:3000 # El origen de tu frontend en desarrollo, o tu dominio en producción

# --- Otras Configuraciones (Opcional) ---
# LOG_LEVEL=debug # Nivel de logging para morgan u otro logger